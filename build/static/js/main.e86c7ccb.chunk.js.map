{"version":3,"sources":["components/1_setState/index.jsx","components/2_lazyLoad/Loading/index.jsx","components/2_lazyLoad/index.jsx","components/3_hooks/index.jsx","components/4_fragment/index.jsx","components/5_context/index.jsx","components/6_optimze 组件优化/index.jsx","components/7_renderProps/index.jsx","components/8_ErrorBoundary/Child.jsx","components/8_ErrorBoundary/Parent.jsx","App.js","index.js"],"names":["Demo","state","count","handleClick","setState","props","console","log","this","onClick","Component","Loading","style","color","Home","lazy","About","Demo2","className","to","fallback","path","component","Demo3","React","useState","setCount","myRef","useRef","useEffect","timer","setInterval","clearInterval","type","ref","ReactDOM","unmountComponentAtNode","document","getElementById","alert","current","value","Demo4","MyContext","createContext","A","username","password","width","backgroundColor","padding","Provider","B","boxSizing","C","Consumer","name","updateName","nextProps","nextState","marginTop","Parent","render","AName","Child","users","map","userObj","age","id","hasError","error","App","background"],"mappings":"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","file":"static/js/main.e86c7ccb.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Demo extends Component {\r\n\r\n    state = { count: 1 }\r\n\r\n\r\n    // 对象式的 getState\r\n    // handleClick = () => {\r\n\r\n    //     // 获取对象中count值\r\n    //     const { count } = this.state;\r\n\r\n    //     // 更新状态\r\n    //     this.setState({ count: count + 1 }, () => {\r\n    //         console.log(this.state.count);\r\n    //     })\r\n    // }\r\n\r\n    // 函数式的 getState\r\n    handleClick = () => {  \r\n\r\n        // 更新状态\r\n        this.setState((state, props) => {\r\n            console.log(state);\r\n            console.log(props);\r\n            return { count: state.count + 1 }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>当前求和为：{this.state.count}</h1>\r\n                <button onClick={this.handleClick}>点我+1</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 style={{ color: 'red' }}>Loading...</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, lazy, Suspense } from 'react'\r\nimport { NavLink, Route, BrowserRouter } from 'react-router-dom'\r\nimport './index.css'\r\n// import Home from './Home'\r\n// import About from './About'\r\nimport Loading from './Loading'\r\n\r\nconst Home = lazy(() => import('./Home'))\r\nconst About = lazy(() => import('./About'))\r\n\r\nexport default class Demo2 extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <BrowserRouter>\r\n                    <h3>React Router</h3>\r\n                    <div className=\"container\">\r\n                        <div className=\"menu\">\r\n                            <ul>\r\n                                {/* 编写路由链接 */}\r\n                                <li><NavLink to=\"/about\">About</NavLink></li>\r\n                                <li><NavLink to=\"/home\">Home</NavLink></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"content\">\r\n                            {/* 注册路由 */}\r\n                            <Suspense fallback={<Loading />}>\r\n                                <Route path=\"/about\" component={About} />\r\n                                <Route path=\"/home\" component={Home} />\r\n                            </Suspense>\r\n                        </div>\r\n                    </div>\r\n                </BrowserRouter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n// 类组件\r\n// class Demo3 extends React.Component {\r\n//     state = { count: 1 }\r\n\r\n//     myRef = React.createRef()\r\n\r\n//     show = () => {\r\n//         alert(this.myRef.current.value)\r\n//     }\r\n\r\n//     handleClick = () => {\r\n//         this.setState(state => ({ count: state.count + 1 }))\r\n//     }\r\n\r\n//     //卸载组件\r\n//     unmount = () => {\r\n//         ReactDOM.unmountComponentAtNode(document.getElementById(\"root\"))\r\n//     }\r\n\r\n//     componentWillUnmount() {\r\n//         clearInterval(this.timer)\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         this.timer = setInterval(() => {\r\n//             this.setState(state => ({ count: state.count + 1 }))\r\n//         }, 1000)\r\n\r\n//     }\r\n\r\n\r\n\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <input type=\"text\" ref={this.myRef} />\r\n//                 <h1>当前求和为：{this.state.count}</h1>\r\n//                 <button onClick={this.handleClick}>点我+1</button>\r\n//                 <button onClick={this.unmount}>卸载组件</button>\r\n//                 <button onClick={this.show}>显示内容</button>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n//函数组件\r\nfunction Demo3() {\r\n    const [count, setCount] = React.useState(0)\r\n    const myRef = React.useRef()\r\n    React.useEffect(() => {\r\n        let timer = setInterval(() => {\r\n            setCount(count => count + 1)\r\n        }, 1000)\r\n        return () => {\r\n            clearInterval(timer)\r\n        }\r\n    }, [])// 相当于两个组件，后面数组写谁就是监听谁，不写都监听，空数组谁也不监听\r\n\r\n    //提示输入的回调\r\n    function show(){\r\n        alert(myRef.current.value)\r\n    }\r\n\r\n    // 加1回调\r\n    function add() {\r\n        // setCount(count + 1)  //第一种写法\r\n        setCount(count => count + 1)\r\n    }\r\n\r\n    // 卸载组件回调\r\n    function unmount() {\r\n        ReactDOM.unmountComponentAtNode(document.getElementById(\"root\"))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" ref={myRef} />\r\n            <h4>当前求和为：{count}</h4>\r\n            <button onClick={add}>点我+1</button>\r\n            <button onClick={unmount}>卸载组件</button>\r\n            <button onClick={show}>显示内容</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Demo3;\r\n","import React, { Component, Fragment } from 'react'\r\n\r\nexport default class Demo4 extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <p>fragment 可以去的多余的div，防止div多层嵌套</p>\r\n                <p>也可以写成空标签，</p>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n// 创建 Context 容器对象\r\nconst MyContext = React.createContext()\r\nexport default class A extends Component {\r\n\r\n    state = { username: \"admin\", password: 123456 }\r\n\r\n    render() {\r\n        const { username, password } = this.state\r\n        return (\r\n            <div style={{ width: '400px', backgroundColor: 'orange', padding: '8px' }}>\r\n                <h3>我是A组件</h3>\r\n                <p>用户名是：{username} 密码：{password}</p>\r\n                <MyContext.Provider value={{ username, password }}>\r\n                    <B />\r\n                </MyContext.Provider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass B extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ width: '100%', backgroundColor: 'skyblue', padding: '8px', boxSizing: 'border-box' }}>\r\n                <h3>我是B组件</h3>\r\n                <p>从A组件接收到用户名是：？？</p>\r\n                <C />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// class C extends Component {\r\n//     static contextType = MyContext  // 声明接收 context\r\n//     render() {\r\n//         const { username, password } = this.context\r\n//         return (\r\n//             <div style={{ width: '100', backgroundColor: '#CCC', padding: '8px' }}>\r\n//                 <h3>我是C组件</h3>\r\n//                 <p>从A组件接收到用户名是：{username}--{password}</p>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\nfunction C() {\r\n    return (\r\n        <div style={{ width: '100', backgroundColor: '#CCC', padding: '8px' }}>\r\n            <h3>我是C组件</h3>\r\n            <p>从A组件接收到用户名是：</p>\r\n            <MyContext.Consumer>\r\n                {value => `${value.username}--${value.password}`}\r\n            </MyContext.Consumer>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\n\r\n\r\n/**\r\n * render 执行次数问题\r\n * \r\n * 当不给子组件传递属性时候，子组件还是会render ，添加阀门生命周期钩子\r\n * 或者 修改状态为空的时候，\r\n * \r\n *  使用阀门生命周期钩子   或者   修改 Component组件为 PureComponent\r\n * \r\n */\r\nexport default class A extends Component {\r\n\r\n    state = { name: 'zs' }\r\n\r\n    updateName = () => {\r\n        this.setState({ name: 'ls' })\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        // console.log(this.props, this.state); // 目前的props和state\r\n        // console.log(nextProps, nextState); // 接下来要变化的 props 和 state\r\n        return !(this.state.name === nextState.name)\r\n    }\r\n\r\n    render() {\r\n        console.log(\"A--render\");\r\n        return (\r\n            <div style={{ backgroundColor: 'skyblue', padding: '10px' }}>\r\n                <p>我的名字是：{this.state.name}</p>\r\n                <button onClick={this.updateName}>修改名字</button>\r\n                <B name={this.state.name}></B>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nclass B extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return !(this.props.name === nextProps.name)\r\n    }\r\n\r\n    render() {\r\n        console.log(\"B--render\");\r\n        return (\r\n            <div style={{ backgroundColor: '#CCC', padding: '10px', marginTop: '20px' }}>\r\n                接收到的name是：{this.props.name}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Count from '../1_setState'\r\n\r\nexport default class Parent extends Component {\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{ width: '400px', backgroundColor: 'orange', padding: '8px' }}>\r\n                <h3>我是Parent组件</h3>\r\n                <A render={name => <Count name={name} />} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass A extends Component {\r\n\r\n    state = { AName: 'TOM' }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ width: '100%', backgroundColor: 'skyblue', padding: '8px', boxSizing: 'border-box' }}>\r\n                <h3>我是A组件</h3>\r\n                {/* 相当于预留一个位置,相当于vue里面插槽 */}\r\n                {this.props.render(this.state.AName)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// class B extends Component {\r\n//     render() {\r\n\r\n//         return (\r\n//             <div style={{ width: '100', backgroundColor: '#CCC', padding: '8px' }}>\r\n//                 <h3>我是B组件{this.props.name}</h3>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Child extends Component {\r\n\r\n    state = {\r\n        // users: [\r\n        //     { id: '001', name: 'Tom', age: 15 },\r\n        //     { id: '002', name: 'jack', age: 13 },\r\n        //     { id: '003', name: 'peiqi', age: 11 },\r\n        // ]\r\n\r\n        users: \"123\"\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>我是Child组件</p>\r\n                {\r\n                    this.state.users.map((userObj) => {\r\n                        return <p key={userObj.id}>{userObj.name}---{userObj.age}</p>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Child from './Child'\r\nexport default class Parent extends Component {\r\n\r\n    state = {\r\n        hasError: ''//用于标识子组件是否产生错误\r\n    }\r\n\r\n    // 错误边界，只适用于开发环境\r\n\r\n    //当parent的子组件出现报错的时候，会触发getDerivedStateFromError 调用并携带错误信息\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n        return { hasError: error }\r\n    }\r\n\r\n    componentDidCatch(){\r\n        console.log(\"渲染组件出错\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.hasError ? <h2>当前网络不稳定，请稍后再试</h2> : <Child />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\nimport Demo from './components/1_setState'\r\nimport Demo2 from './components/2_lazyLoad'\r\nimport Demo3 from './components/3_hooks'\r\nimport Demo4 from './components/4_fragment'\r\nimport Demo5 from './components/5_context'\r\nimport Demo6 from './components/6_optimze 组件优化'\r\nimport Demo7 from './components/7_renderProps'\r\nimport Demo8 from './components/8_ErrorBoundary/Parent'\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <h5 style={{ background: '#CCC' }}>setState两种方式</h5>\r\n                <Demo />\r\n                <hr />\r\n                <h5 style={{ background: '#CCC' }}>路由懒加载</h5>\r\n                <Demo2 />\r\n                <h5 style={{ background: '#CCC' }}>Hook</h5>\r\n                <Demo3 />\r\n                <h5 style={{ background: '#CCC' }}>Fragment</h5>\r\n                <Demo4 />\r\n                <h5 style={{ background: '#CCC' }}>Context</h5>\r\n                <Demo5 />\r\n                <h5 style={{ background: '#CCC' }}>optimze 组件优化</h5>\r\n                <Demo6 />\r\n                <h5 style={{ background: '#CCC' }}>renderProps</h5>\r\n                <Demo7 />\r\n                <h5 style={{ background: '#CCC' }}>8_ErrorBoundary错误边界</h5>\r\n                <Demo8 />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","// 入口文件\r\n\r\n// 引入 react 核心库\r\nimport React from 'react'\r\n\r\n// 引入 reactDOM\r\nimport ReactDOM from 'react-dom'\r\n\r\n// 引入 App 组件\r\nimport App from './App'\r\n\r\n// 渲染App到页面\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n\r\n"],"sourceRoot":""}